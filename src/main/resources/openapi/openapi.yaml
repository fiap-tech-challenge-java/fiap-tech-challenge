openapi: 3.0.3
info:
  title: FIAP_TC1
  version: 1.0.0
  description: API para gerenciar usuários (dono de restaurante e cliente)
servers:
  -
    url: http://localhost:8080/api/v1
paths:
  /users:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
          description: Lista de usuários retornada com sucesso (pode ser vazia)
      operationId: getUsers
      summary: Lista todos os usuários
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
          description: Usuário criado com sucesso.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Dados inválidos fornecidos
      operationId: createUser
      summary: Cria um novo usuário
  /users/{id}:
    get:
      parameters:
        -
          name: id
          schema:
            format: uuid
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Usuário encontrado
        '404':
          description: Usuário não encontrado
      operationId: getUser
      summary: Busca um usuário pelo ID
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        required: true
      parameters:
        -
          name: id
          schema:
            format: uuid
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Usuário atualizado
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Usuário não encontrado
      operationId: updateUser
      summary: Atualiza um usuário existente.
    delete:
      parameters:
        -
          name: id
          schema:
            format: uuid
            type: string
          in: path
          required: true
      responses:
        '204':
          description: Usuário deletado com sucesso
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Usuário não encontrado
      operationId: deleteUser
      summary: Deleta um usuário existente
  /users/change-password:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordRequest'
        required: true
      responses:
        '204':
          description: Senha trocada com sucesso.
      operationId: changePassword
      summary: Troca a senha do usuário.
  /addresses/user:
    get:
      parameters:
        -
          name: idUser
          description: ''
          schema:
            format: uuid
            type: string
          in: query
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AddressResponse'
          description: Lista com sucesso todos os endereços do usuário.
      operationId: listAllAddressesUser
      summary: Lista todos os endereços do usuário.
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAddressRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResponse'
          description: Endereço alterado com sucesso.
      operationId: updateAddressUser
      summary: Alterar endereço do usuário
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddressRequest'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressResponse'
          description: Cria com sucesso endereço ao usuário.
      operationId: createAddressUser
    delete:
      parameters:
        -
          name: idUSer
          description: ''
          schema:
            format: uuid
            type: string
          in: query
          required: true
        -
          name: idAddress
          description: ''
          schema:
            format: uuid
            type: string
          in: query
          required: true
      responses:
        '204':
          description: Endereço deletado com sucesso
      operationId: deleteAddressUser
      summary: Deleta logicamente o endereço do usuário.
components:
  schemas:
    ErrorResponse:
      required:
        - message
        - code
        - status
        - path
      type: object
      properties:
        message:
          description: Mensagem de erro detalhada
          type: string
        code:
          description: Código do erro
          type: string
        status:
          description: Código de status HTTP
          type: integer
        path:
          description: URL da requisição
          type: string
        fieldErrors:
          description: Mapa de erros de validação específicos do campo.
          type: object
          additionalProperties:
            type: string
    AddressUserRequest:
      type: object
      properties:
        publicPlace:
          type: string
        number:
          type: string
        complement:
          type: string
        neighborhood:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
    ChangePasswordRequest:
      title: Root Type for ChangePassword
      description: ''
      type: object
      properties:
        idUser:
          format: uuid
          type: string
        newPassword:
          type: string
        confirmPassword:
          type: string
      example:
        idUser: 1
        lastPassword: Laf123
        newPassword: Laf1234
    UserRole:
      description: Papel do usuário no sistema
      enum:
        - OWNER
        - CUSTOMER
      type: string
    CreateAddressRequest:
      title: Root Type for AddressUser
      description: ''
      type: object
      properties:
        idUser:
          type: string
          format: uuid
        publicPlace:
          type: string
        number:
          type: string
        complement:
          type: string
        neighborhood:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
      example:
        userId: b1a7d7a3-2f18-4c91-a10d-9e4a5c0f3b99
        publicPlace: Rua das Flores
        number: '123'
        complement: Apto 202
        neighborhood: Jardim Primavera
        city: São Paulo
        state: SP
        postalCode: 01234-567
    UpdateAddressRequest:
      title: Root Type for UpdateAddressRequest
      description: ''
      type: object
      properties:
        idUser:
          format: uuid
          type: string
        idAddress:
          type: string
        publicPlace:
          type: string
        number:
          type: string
        complement:
          type: string
        neighborhood:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
      example:
        idUser: b1a7d7a3-2f18-4c91-a10d-9e4a5c0f3b99
        idAddress: b1a7d7a3-2f18-4c91-a10d-9e4a5c0f3b99
        publicPlace: Rua das Flores
        number: '123'
        complement: Apto 202
        neighborhood: Jardim Primavera
        city: São Paulo
        state: SP
        postalCode: 01234-567
    AddressResponse:
      title: Root Type for UpdateAddressResponse
      description: ''
      type: object
      properties:
        idAddress:
          type: string
        publicPlace:
          type: string
        number:
          type: string
        complement:
          type: string
        neighborhood:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
      example:
        idAddress: b1a7d7a3-2f18-4c91-a10d-9e4a5c0f3b99
        publicPlace: Rua das Flores
        number: '123'
        complement: Apto 202
        neighborhood: Jardim Primavera
        city: São Paulo
        state: SP
        postalCode: 01234-567
    CreateUserRequest:
      title: Root Type for CreateUserRequest
      description: ''
      required:
        - address
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        cpf:
          type: string
        login:
          type: string
        password:
          type: string
        role:
          type: string
        address:
          $ref: '#/components/schemas/AddressUserRequest'
          properties:
            publicPlace:
              type: string
            number:
              type: string
            complement:
              type: string
            neighborhood:
              type: string
            city:
              type: string
            state:
              type: string
            postalCode:
              type: string
      example:
        name: João Silva
        email: joao@exemplo.com
        cpf: '23423423423'
        login: joaosilva123
        password: MyPassword123!
        role: CUSTOMER
        address:
          publicPlace: Rua das Flores
          number: '123'
          complement: Apartamento 45
          neighborhood: Centro
          city: São Paulo
          state: SP
          postalCode: 01001-000
    CreateUserResponse:
      title: Root Type for CreateUserResponse
      description: ''
      type: object
      properties:
        idUser:
          format: uuid
          type: string
        name:
          type: string
        email:
          type: string
        cpf:
          type: string
        login:
          type: string
        password:
          type: string
        role:
          type: string
        address:
          type: array
          items:
            $ref: '#/components/schemas/AddressResponse'
          properties:
            idAddress:
              type: string
            publicPlace:
              type: string
            number:
              type: string
            complement:
              type: string
            neighborhood:
              type: string
            city:
              type: string
            state:
              type: string
            postalCode:
              type: string
      example:
        idUser: fdsgasfdg234-sfdgh-39468956-adfg
        name: João Silva
        email: joao@exemplo.com
        cpf: '23423423423'
        login: joaosilva123
        password: MyPassword123!
        role: CUSTOMER
        active: 'true'
        address:
          idAddress: fdsgadfghsfdgh-39468956-adfg
          publicPlace: Rua das Flores
          number: '123'
          complement: Apartamento 45
          neighborhood: Centro
          city: São Paulo
          state: SP
          postalCode: 01001-000
    UserResponse:
      title: Root Type for UserReponse
      description: ''
      required: []
      type: object
      properties:
        idUser:
          format: uuid
          type: string
        name:
          type: string
        email:
          type: string
        cpf:
          type: string
        login:
          type: string
        password:
          type: string
        role:
          type: string
        address:
          type: array
          items:
            $ref: '#/components/schemas/AddressResponse'
        active:
          description: ''
          type: boolean
      example:
        idUser: fdsgasfdg234-sfdgh-39468956-adfg
        name: João Silva
        email: joao@exemplo.com
        cpf: '23423423423'
        login: joaosilva123
        password: MyPassword123!
        role: CUSTOMER
        active: 'true'
        address:
          -
            idAddress: fdsgadfghsfdgh-39468956-adfg
            publicPlace: Rua das Flores
            number: '123'
            complement: Apartamento 45
            neighborhood: Centro
            city: São Paulo
            state: SP
            postalCode: 01001-000
          -
            idAddress: abc123-39468956-adfg-xyz987
            publicPlace: Avenida Brasil
            number: '456'
            complement: Casa
            neighborhood: Jardim América
            city: Rio de Janeiro
            state: RJ
            postalCode: 22000-000
    UpdateUserRequest:
      title: Root Type for UpdateUserRequest
      description: ''
      type: object
      properties:
        nome:
          type: string
        login:
          type: string
      example:
        nome: Larissa fiap
        login: LarissaLu
tags:
  -
    name: Users
    description: Operações relacionadas a usuários
