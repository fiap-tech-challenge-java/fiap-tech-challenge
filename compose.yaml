services:
  techchallenge_postgres:
    image: postgres:latest
    container_name: techchallenge_postgres
    environment:
      POSTGRES_DB: techchallenge
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespass
    ports:
      - "5438:5432"
    volumes:
      - techchallenge_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  techchallenge_tests:
    image: maven:3.9.8-eclipse-temurin-21
    container_name: techchallenge_tests
    working_dir: /app
    volumes:
      - ./:/app
      - ~/.m2:/root/.m2
    command: ["./mvnw", "clean", "test"]
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://techchallenge_postgres:5432/techchallenge
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgrespass
    depends_on:
      techchallenge_postgres:
        condition: service_healthy

  techchallenge_application:
    container_name: techchallenge_application
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    working_dir: /build
    volumes:
      - ./:/build
      - ~/.m2:/root/.m2
    command:
      - "./mvnw"
      - "generate-sources"
      - "compile"
      - "spring-boot:run"
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://techchallenge_postgres:5432/techchallenge
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgrespass
      SPRING_PROFILES_ACTIVE: dev
    depends_on:
      techchallenge_postgres:
        condition: service_healthy

volumes:
  techchallenge_pgdata:
